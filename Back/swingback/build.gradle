plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//JSON 파싱 라이브러리
	implementation 'org.json:json:20231013'
	implementation 'com.google.code.gson:gson:2.8.9'

	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'jakarta.validation:jakarta.validation-api:3.0.0' // 최신 버전
	implementation 'org.hibernate.validator:hibernate-validator:7.0.0.Final' // 최신 버전
	implementation 'org.glassfish:javax.el:3.0.0'

	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	//OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//FCM
	implementation 'com.google.firebase:firebase-admin:9.1.1'

	//batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	testImplementation 'org.springframework.batch:spring-batch-test'
	implementation 'org.springframework.batch:spring-batch-core:5.1.2' // 본인의 Spring Batch 버전에 맞게 수정

}

tasks.named('test') {
	useJUnitPlatform()
}
